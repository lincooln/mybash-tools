#!/bin/bash
# SyncthingTray Installer for ALT Linux and derivatives
# –í–µ—Ä—Å–∏—è 5.4 ‚Äî —Ñ–∏–Ω–∞–ª—å–Ω–∞—è, –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –ê–≤—Ç–æ—Ä: Lincooln, —Å —É—á–∞—Å—Ç–∏–µ–º Qwen3-Max
# ==================================================

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–∏–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) ===
# –ê–¥—Ä–µ—Å–∞ –≥–¥–µ –±–µ—Ä—ë–º –∞—Ä—Ö–∏–≤—ã —Ç–µ–∫—É—â–∏–π –∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π
DOWNLOAD_URL="https://github.com/Martchus/syncthingtray/releases/download/v2.0.2/syncthingtray-2.0.2-x86_64-pc-linux-gnu.tar.xz"
OLD_DOWNLOAD_URL="https://github.com/Martchus/syncthingtray/releases/download/v2.0.1/syncthingtray-2.0.1-x86_64-pc-linux-gnu.tar.xz"
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
ROOT_DIR="/opt/syncthingtray"
USER_DIR="$HOME/bin/syncthingtray"
# ==============================================

set -e

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
TEMP_DIR=""
CURRENT_URL="$DOWNLOAD_URL"
FALLBACK_URL="$OLD_DOWNLOAD_URL"
ARCHIVE_PATH=""

# --------------------------------------------------
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
# --------------------------------------------------

is_yes() {
    [[ "$1" =~ ^([yY–¥–î])$ ]]
}

detect_os() {
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        if [[ "$ID" == "altlinux" ]] || [[ "$ID_LIKE" == *"altlinux"* ]]; then
            echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞ –±–∞–∑–µ ALT Linux ($VERSION_ID)"
            return 0
        else
            echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $PRETTY_NAME"
            echo "‚ÑπÔ∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è ALT Linux –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö."
            read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞ —Å–≤–æ–π —Ä–∏—Å–∫? (y/–¥ ‚Äî –¥–∞, n/–Ω ‚Äî –Ω–µ—Ç): " -r
            if ! is_yes "$REPLY"; then
                echo "–û—Ç–º–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
                exit 0
            fi
        fi
    else
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –û–°."
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/–¥ ‚Äî –¥–∞, n/–Ω ‚Äî –Ω–µ—Ç): " -r
        if ! is_yes "$REPLY"; then exit 0; fi
    fi
}

detect_user_mode() {
    if [[ $EUID -eq 0 ]] && [[ -n "$SUDO_USER" ]] && [[ "$HOME" == "/root" ]]; then
        echo "‚ö†Ô∏è  –í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ sudo."
        echo "    –≠—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤ /opt –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –¢–û–õ–¨–ö–û –¥–ª—è root."
        echo "    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å –û–¢ –°–í–û–ï–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:"
        echo "        ./$0"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ root? (y/–¥ ‚Äî –¥–∞, n/–Ω ‚Äî –Ω–µ—Ç): " -r
        if ! is_yes "$REPLY"; then exit 0; fi
    fi

    if [[ $EUID -eq 0 ]]; then
        INSTALL_DIR="$ROOT_DIR"
        DESKTOP_DIR="/usr/share/applications"
        SYSTEM_MODE=true
    else
        INSTALL_DIR="$USER_DIR"
        DESKTOP_DIR="$HOME/.local/share/applications"
        SYSTEM_MODE=false
    fi
}

check_installed() {
    if [[ -f "$INSTALL_DIR/syncthingtray" ]]; then
        echo "üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –≤: $INSTALL_DIR"
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        echo "  1 ‚Äî –û–±–Ω–æ–≤–∏—Ç—å"
        echo "  2 ‚Äî –£–¥–∞–ª–∏—Ç—å"
        echo "  0 ‚Äî –û—Ç–º–µ–Ω–∞"
        read -p "–í–∞—à –≤—ã–±–æ—Ä (1/2/0): " -r
        case "$REPLY" in
            2) uninstall_app; exit 0 ;;
            1) MODE="–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"; return 0 ;;
            *) echo "–û—Ç–º–µ–Ω–∞."; exit 0 ;;
        esac
    else
        MODE="—É—Å—Ç–∞–Ω–æ–≤–∫–∞"
        echo "üÜï SyncthingTray –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

ensure_archive_tools() {
    local missing=()
    for tool in tar unzip file; do
        command -v "$tool" &>/dev/null || missing+=("$tool")
    done
    if [[ ${#missing[@]} -gt 0 ]]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Ç–∏–ª–∏—Ç—ã: ${missing[*]}"
        read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ apt-get? (y/–¥ ‚Äî –¥–∞): " -r
        if is_yes "$REPLY"; then
            if [[ "$SYSTEM_MODE" == true ]]; then
                apt-get update && apt-get install -y "${missing[@]}"
            elif command -v sudo &>/dev/null; then
                sudo apt-get update && sudo apt-get install -y "${missing[@]}"
            else
                echo "‚ö†Ô∏è  sudo –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ:"
                echo "   su -c 'apt-get update && apt-get install -y ${missing[*]}'"
                exit 1
            fi
        else
            echo "–í—ã—Ö–æ–¥: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç."
            exit 1
        fi
    fi
}

# üîë –ò–°–ü–†–ê–í–õ–ï–ù–û: –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–æ–∏—Å–∫ –∞—Ä—Ö–∏–≤–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏
find_local_archive() {
    local script_dir
    script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    local -a candidates=()
    local file

    while IFS= read -r -d '' file; do
        if [[ "$file" =~ \.(tar\.xz|tar\.gz|zip)$ ]]; then
            local basename
            basename=$(basename "$file" | tr '[:upper:]' '[:lower:]')
            if [[ "$basename" == *"syncthingtray"* ]]; then
                candidates+=("$file")
            fi
        fi
    done < <(find "$script_dir" -maxdepth 1 -type f \( -name "*.tar.xz" -o -name "*.tar.gz" -o -name "*.zip" \) -print0)

    if [[ ${#candidates[@]} -eq 0 ]]; then
        return 1
    elif [[ ${#candidates[@]} -gt 1 ]]; then
        echo "‚ùå –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤:"
        printf '  - %s\n' "${candidates[@]}"
        echo "–û—Å—Ç–∞–≤—å—Ç–µ –æ–¥–∏–Ω –∞—Ä—Ö–∏–≤ —Ä—è–¥–æ–º —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º."
        exit 1
    fi

    local candidate="${candidates[0]}"
    if tar -tf "$candidate" 2>/dev/null | grep -q "syncthingtray"; then
        echo "$candidate"
        return 0
    else
        echo "‚ùå 'syncthingtray' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ: $(basename "$candidate")"
        return 1
    fi
}

check_github_connectivity() {
    if command -v curl &>/dev/null; then
        curl -sf --connect-timeout 5 --max-time 10 https://github.com/ >/dev/null 2>&1
    elif command -v wget &>/dev/null; then
        wget -q --spider --timeout=5 --tries=1 https://github.com/ 2>/dev/null
    else
        return 1
    fi
}

ensure_network_tools() {
    if command -v wget &>/dev/null || command -v curl &>/dev/null; then
        return 0
    fi
    echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç wget –∏–ª–∏ curl –¥–ª—è –æ–Ω–ª–∞–π–Ω-–æ–ø–µ—Ä–∞—Ü–∏–π."
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å wget —á–µ—Ä–µ–∑ apt-get? (y/–¥ ‚Äî –¥–∞): " -r
    if is_yes "$REPLY"; then
        if [[ "$SYSTEM_MODE" == true ]]; then
            apt-get update && apt-get install -y wget
        elif command -v sudo &>/dev/null; then
            sudo apt-get update && sudo apt-get install -y wget
        else
            echo "‚ö†Ô∏è  sudo –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ:"
            echo "   su -c 'apt-get update && apt-get install -y wget'"
            exit 1
        fi
    else
        echo "–ë–µ–∑ wget/curl –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ —Å–∫–∞—á–∞—Ç—å –∞—Ä—Ö–∏–≤."
        exit 1
    fi
}

fetch_latest_release_url() {
    local api_url="https://api.github.com/repos/Martchus/syncthingtray/releases/latest"
    if command -v curl &>/dev/null; then
        curl -s "$api_url" | grep -o '"browser_download_url": "[^"]*x86_64-pc-linux-gnu\.tar\.xz"' | head -n1 | cut -d'"' -f4
    elif command -v wget &>/dev/null; then
        wget -qO- "$api_url" | grep -o '"browser_download_url": "[^"]*x86_64-pc-linux-gnu\.tar\.xz"' | head -n1 | cut -d'"' -f4
    fi
}

# üîë –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
offer_to_update_url() {
    local latest_url="$1"
    local current_version latest_version

    current_version=$(echo "$CURRENT_URL" | grep -oP 'v[0-9]+\.[0-9]+\.[0-9]+' | head -n1)
    latest_version=$(echo "$latest_url" | grep -oP 'v[0-9]+\.[0-9]+\.[0-9]+')

    if [[ -z "$current_version" ]] || [[ -z "$latest_version" ]]; then
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Å—Å—ã–ª–∫—É."
        return 0
    fi

    if [[ "$latest_version" > "$current_version" ]]; then
        echo "üÜï –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $latest_version (—Ç–µ–∫—É—â–∞—è: $current_version)"
        read -p "–û–±–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é? (y/–¥ ‚Äî –¥–∞): " -r
        if is_yes "$REPLY"; then
            FALLBACK_URL="$CURRENT_URL"
            CURRENT_URL="$latest_url"
            echo "‚ÑπÔ∏è  –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞: $CURRENT_URL"
        fi
    else
        echo "‚ÑπÔ∏è  –¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é: $current_version"
    fi
}

download_archive_with_retries() {
    local url="$1"
    local dest="$2"
    local max_retries=3
    local attempt=1

    while [[ $attempt -le $max_retries ]]; do
        if [[ $attempt -gt 1 ]]; then
            echo "üîÅ –ü–æ–ø—ã—Ç–∫–∞ $attempt –∏–∑ $max_retries..."
        fi

        if wget --quiet --show-progress --progress=bar:force:noscroll -O "$dest" "$url" 2>&1; then
            echo
            echo "‚úÖ –ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω."
            return 0
        else
            echo
            echo "‚ùå –ü–æ–ø—ã—Ç–∫–∞ $attempt –Ω–µ —É–¥–∞–ª–∞—Å—å."
            if [[ $attempt -lt $max_retries ]]; then
                sleep 2
            fi
        fi
        ((attempt++))
    done
    return 1
}

validate_binary_and_deps() {
    local bin="$1"
    if [[ ! -f "$bin" ]]; then
        echo "‚ùå –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $bin"
        return 1
    fi
    local file_output
    file_output=$(file "$bin" 2>/dev/null)
    if [[ "$file_output" != *"ELF"* ]] || [[ "$file_output" != *"executable"* ]]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º ELF-–±–∏–Ω–∞—Ä–Ω–∏–∫–æ–º."
        echo "   –í—ã–≤–æ–¥ 'file': $file_output"
        return 1
    fi
    local missing
    missing=$(ldd "$bin" 2>/dev/null | grep "not found" | awk '{print $1}')
    if [[ -n "$missing" ]]; then
        echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
        echo "$missing" | while IFS= read -r lib; do
            [[ -n "$lib" ]] && echo "  - $lib"
        done
        return 1
    fi
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
    return 0
}

extract_and_validate() {
    local archive="$1"
    local out_dir="$2"

    echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤..."
    if [[ "$archive" == *.zip ]]; then
        unzip -q "$archive" -d "$out_dir"
    else
        tar -xf "$archive" -C "$out_dir"
    fi
    echo "‚úÖ –ê—Ä—Ö–∏–≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω."

    BINARY=$(find "$out_dir" -type f -name "syncthingtray" 2>/dev/null | head -n1)
    if [[ -z "$BINARY" ]]; then
        echo "‚ùå –§–∞–π–ª 'syncthingtray' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ."
        echo "   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
        find "$out_dir" -type f | sed 's/^/     /' || echo "     (–ø—É—Å—Ç–æ)"
        return 1
    fi
    echo "‚úÖ –ù–∞–π–¥–µ–Ω –±–∏–Ω–∞—Ä–Ω–∏–∫: $(realpath --relative-to="$out_dir" "$BINARY")"

    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏..."
    validate_binary_and_deps "$BINARY"
}

install_app() {
    local src_dir="$1"
    mkdir -p "$INSTALL_DIR"
    cp "$BINARY" "$INSTALL_DIR/syncthingtray"
    chmod +x "$INSTALL_DIR/syncthingtray"

    local syncthing_bin
    syncthing_bin=$(dirname "$BINARY")/syncthing
    if [[ -f "$syncthing_bin" ]]; then
        cp "$syncthing_bin" "$INSTALL_DIR/"
        chmod +x "$INSTALL_DIR/syncthing"
        echo "‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Syncthing —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi

    mkdir -p "$DESKTOP_DIR"
    cat <<EOF > "$DESKTOP_DIR/syncthingtray.desktop"
[Desktop Entry]
Name=Syncthing Tray
Comment=Tray icon and integration for Syncthing
Exec=$INSTALL_DIR/syncthingtray
Icon=network-sync
Terminal=false
Type=Application
Categories=Network;System;
StartupNotify=false
Keywords=sync;syncthing;tray;
StartupWMClass=syncthingtray
X-KDE-UniqueApp=true
X-GNOME-Autostart-enabled=true
EOF

    if command -v kbuildsycoca5 &>/dev/null; then
        kbuildsycoca5 &>/dev/null || true
    elif command -v update-desktop-database &>/dev/null; then
        update-desktop-database "$DESKTOP_DIR" &>/dev/null || true
    fi
}

uninstall_app() {
    if pgrep -x "syncthingtray" > /dev/null; then
        echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—É—â–µ–Ω–Ω—ã–π SyncthingTray..."
        pkill -x "syncthingtray"
        sleep 1
    fi

    echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ SyncthingTray –∏–∑ $INSTALL_DIR..."
    rm -rf "$INSTALL_DIR"
    rm -f "$DESKTOP_DIR/syncthingtray.desktop"

    if command -v kbuildsycoca5 &>/dev/null; then
        kbuildsycoca5 &>/dev/null || true
    elif command -v update-desktop-database &>/dev/null; then
        update-desktop-database "$DESKTOP_DIR" &>/dev/null || true
    fi

    echo "‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
    echo "‚ÑπÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ ~/.config/syncthing* —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
}

cleanup() {
    [[ -n "$TEMP_DIR" && -d "$TEMP_DIR" ]] && rm -rf "$TEMP_DIR"
    [[ -n "$TEMP_ARCHIVE" && -f "$TEMP_ARCHIVE" ]] && rm -f "$TEMP_ARCHIVE"
}
trap cleanup EXIT INT TERM

# --------------------------------------------------
# –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫
# --------------------------------------------------

main() {
    echo "=== SyncthingTray: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ ALT Linux ==="

    detect_os
    detect_user_mode
    check_installed
    ensure_archive_tools

    if local_archive=$(find_local_archive 2>/dev/null); then
        echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤: $(basename "$local_archive")"
        ARCHIVE_PATH="$local_archive"
    else
        echo "üìÅ –õ–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω."

        echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å github.com..."
        if check_github_connectivity; then
            echo "‚úÖ github.com –¥–æ—Å—Ç—É–ø–µ–Ω."
        else
            echo "‚ùå github.com –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞."
            echo
            echo "‚ÑπÔ∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤ –≤—Ä—É—á–Ω—É—é:"
            echo "    ‚Ä¢ https://martchus.github.io/syncthingtray/#downloads-section"
            echo "    ‚Ä¢ https://github.com/Martchus/syncthingtray/releases"
            echo
            echo "    –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ —Ç—É –∂–µ –ø–∞–ø–∫—É, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç,"
            echo "    –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
            exit 1
        fi

        ensure_network_tools

        # üîë –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏..."
        if latest_url=$(fetch_latest_release_url); then
            if [[ -n "$latest_url" ]] && [[ "$latest_url" != "$CURRENT_URL" ]]; then
                offer_to_update_url "$latest_url"
            fi
        else
            echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏."
        fi

        max_attempts=2
        attempt=1
        while [[ $attempt -le $max_attempts ]]; do
            TEMP_ARCHIVE="/tmp/syncthingtray-download-$$"
            if download_archive_with_retries "$CURRENT_URL" "$TEMP_ARCHIVE"; then
                ARCHIVE_PATH="$TEMP_ARCHIVE"
                break
            else
                if [[ $attempt -eq 1 ]] && [[ -n "$FALLBACK_URL" ]] && [[ "$CURRENT_URL" != "$FALLBACK_URL" ]]; then
                    echo
                    echo "‚ùì –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é."
                    echo "   –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–∑–≤–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é?"
                    read -p "(y/–¥ ‚Äî –¥–∞): " -r
                    if is_yes "$REPLY"; then
                        CURRENT_URL="$FALLBACK_URL"
                        attempt=$((attempt + 1))
                        continue
                    fi
                fi
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –Ω–∏ –ø–æ –æ–¥–Ω–æ–π —Å—Å—ã–ª–∫–µ."
                exit 1
            fi
        done
    fi

    TEMP_DIR="/tmp/syncthingtray-extract-$$"
    mkdir -p "$TEMP_DIR"

    if ! extract_and_validate "$ARCHIVE_PATH" "$TEMP_DIR"; then
        if [[ "$CURRENT_URL" != "$FALLBACK_URL" ]] && [[ -n "$FALLBACK_URL" ]]; then
            echo
            echo "‚ùì –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞:"
            echo "   - –ê—Ä—Ö–∏–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–≤—Ä–µ–∂–¥—ë–Ω"
            echo "   - –í–µ—Ä—Å–∏—è –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π"
            echo "   - –°–∫–∞—á–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–±–µ–ª—ã!)"
            echo
            echo "   –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–∑–≤–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é?"
            read -p "(y/–¥ ‚Äî –¥–∞): " -r
            if is_yes "$REPLY"; then
                CURRENT_URL="$FALLBACK_URL"
                rm -rf "$TEMP_DIR"
                TEMP_ARCHIVE="/tmp/syncthingtray-download-$$"
                if ! download_archive_with_retries "$CURRENT_URL" "$TEMP_ARCHIVE"; then
                    echo "‚ùå –î–∞–∂–µ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."
                    exit 1
                fi
                mkdir -p "$TEMP_DIR"
                if ! extract_and_validate "$TEMP_ARCHIVE" "$TEMP_DIR"; then
                    echo "‚ùå –î–∞–∂–µ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π."
                    exit 1
                fi
            else
                exit 1
            fi
        else
            echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞: –Ω–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π –≤–µ—Ä—Å–∏–∏."
            exit 1
        fi
    fi

    install_app "$TEMP_DIR"

    echo
    if [[ "$MODE" == "—É—Å—Ç–∞–Ω–æ–≤–∫–∞" ]]; then
        echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    else
        echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    fi
    echo
    echo "‚ÑπÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏: ~/.config/syncthing*"
    echo "‚û°Ô∏è  –ó–∞–ø—É—Å–∫: $INSTALL_DIR/syncthingtray"
}

main "$@"
